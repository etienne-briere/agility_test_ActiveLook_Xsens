
//  WARNING: COPYRIGHT (C) 2023 MOVELLA TECHNOLOGIES OR SUBSIDIARIES WORLDWIDE. ALL RIGHTS RESERVED.
//  THIS FILE AND THE SOURCE CODE IT CONTAINS (AND/OR THE BINARY CODE FILES FOUND IN THE SAME
//  FOLDER THAT CONTAINS THIS FILE) AND ALL RELATED SOFTWARE (COLLECTIVELY, "CODE") ARE SUBJECT
//  TO A RESTRICTED LICENSE AGREEMENT ("AGREEMENT") BETWEEN XSENS AS LICENSOR AND THE AUTHORIZED
//  LICENSEE UNDER THE AGREEMENT. THE CODE MUST BE USED SOLELY WITH XSENS PRODUCTS INCORPORATED
//  INTO LICENSEE PRODUCTS IN ACCORDANCE WITH THE AGREEMENT. ANY USE, MODIFICATION, COPYING OR
//  DISTRIBUTION OF THE CODE IS STRICTLY PROHIBITED UNLESS EXPRESSLY AUTHORIZED BY THE AGREEMENT.
//  IF YOU ARE NOT AN AUTHORIZED USER OF THE CODE IN ACCORDANCE WITH THE AGREEMENT, YOU MUST STOP
//  USING OR VIEWING THE CODE NOW, REMOVE ANY COPIES OF THE CODE FROM YOUR COMPUTER AND NOTIFY
//  XSENS IMMEDIATELY BY EMAIL TO INFO@XSENS.COM. ANY COPIES OR DERIVATIVES OF THE CODE (IN WHOLE
//  OR IN PART) IN SOURCE CODE FORM THAT ARE PERMITTED BY THE AGREEMENT MUST RETAIN THE ABOVE
//  COPYRIGHT NOTICE AND THIS PARAGRAPH IN ITS ENTIRETY, AS REQUIRED BY THE AGREEMENT.
//  

//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace MovellaDotPcSdk {

public class XsFilterProfile : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal XsFilterProfile(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(XsFilterProfile obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~XsFilterProfile() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          movelladot_pc_sdkPINVOKE.delete_XsFilterProfile(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public XsFilterProfile(byte type_, byte version_, string kind_, string label_, char filterType_, byte filterMajor_, byte filterMinor_) : this(movelladot_pc_sdkPINVOKE.new_XsFilterProfile__SWIG_0(type_, version_, kind_, label_, filterType_, filterMajor_, filterMinor_), true) {
  }

  public XsFilterProfile(byte type_, byte version_, string kind_, string label_, char filterType_, byte filterMajor_) : this(movelladot_pc_sdkPINVOKE.new_XsFilterProfile__SWIG_1(type_, version_, kind_, label_, filterType_, filterMajor_), true) {
  }

  public XsFilterProfile(byte type_, byte version_, string kind_, string label_, char filterType_) : this(movelladot_pc_sdkPINVOKE.new_XsFilterProfile__SWIG_2(type_, version_, kind_, label_, filterType_), true) {
  }

  public XsFilterProfile(byte type_, byte version_, string kind_, string label_) : this(movelladot_pc_sdkPINVOKE.new_XsFilterProfile__SWIG_3(type_, version_, kind_, label_), true) {
  }

  public XsFilterProfile(byte type_, byte version_, string kind_) : this(movelladot_pc_sdkPINVOKE.new_XsFilterProfile__SWIG_4(type_, version_, kind_), true) {
  }

  public XsFilterProfile(byte type_, byte version_) : this(movelladot_pc_sdkPINVOKE.new_XsFilterProfile__SWIG_5(type_, version_), true) {
  }

  public XsFilterProfile(byte type_) : this(movelladot_pc_sdkPINVOKE.new_XsFilterProfile__SWIG_6(type_), true) {
  }

  public XsFilterProfile() : this(movelladot_pc_sdkPINVOKE.new_XsFilterProfile__SWIG_7(), true) {
  }

  public XsFilterProfile(XsFilterProfile other) : this(movelladot_pc_sdkPINVOKE.new_XsFilterProfile__SWIG_8(XsFilterProfile.getCPtr(other)), true) {
    if (movelladot_pc_sdkPINVOKE.SWIGPendingException.Pending) throw movelladot_pc_sdkPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool empty() {
    bool ret = movelladot_pc_sdkPINVOKE.XsFilterProfile_empty(swigCPtr);
    return ret;
  }

  public XsString toXsString() {
    XsString ret = new XsString(movelladot_pc_sdkPINVOKE.XsFilterProfile_toXsString(swigCPtr), true);
    return ret;
  }

  public byte type() {
    byte ret = movelladot_pc_sdkPINVOKE.XsFilterProfile_type(swigCPtr);
    return ret;
  }

  public byte version() {
    byte ret = movelladot_pc_sdkPINVOKE.XsFilterProfile_version(swigCPtr);
    return ret;
  }

  public string label() {
    string ret = movelladot_pc_sdkPINVOKE.XsFilterProfile_label(swigCPtr);
    return ret;
  }

  public string kind() {
    string ret = movelladot_pc_sdkPINVOKE.XsFilterProfile_kind(swigCPtr);
    return ret;
  }

  public char filterType() {
    char ret = movelladot_pc_sdkPINVOKE.XsFilterProfile_filterType(swigCPtr);
    return ret;
  }

  public byte filterMajor() {
    byte ret = movelladot_pc_sdkPINVOKE.XsFilterProfile_filterMajor(swigCPtr);
    return ret;
  }

  public byte filterMinor() {
    byte ret = movelladot_pc_sdkPINVOKE.XsFilterProfile_filterMinor(swigCPtr);
    return ret;
  }

  public void setType(byte type_) {
    movelladot_pc_sdkPINVOKE.XsFilterProfile_setType(swigCPtr, type_);
  }

  public void setVersion(byte version_) {
    movelladot_pc_sdkPINVOKE.XsFilterProfile_setVersion(swigCPtr, version_);
  }

  public void setLabel(string label_) {
    movelladot_pc_sdkPINVOKE.XsFilterProfile_setLabel(swigCPtr, label_);
  }

  public void setKind(string kind_) {
    movelladot_pc_sdkPINVOKE.XsFilterProfile_setKind(swigCPtr, kind_);
  }

  public void setFilterType(char filterType_) {
    movelladot_pc_sdkPINVOKE.XsFilterProfile_setFilterType(swigCPtr, filterType_);
  }

  public void setFilterVersion(byte major_, byte minor_) {
    movelladot_pc_sdkPINVOKE.XsFilterProfile_setFilterVersion(swigCPtr, major_, minor_);
  }

  public void swap(XsFilterProfile other) {
    movelladot_pc_sdkPINVOKE.XsFilterProfile_swap(swigCPtr, XsFilterProfile.getCPtr(other));
    if (movelladot_pc_sdkPINVOKE.SWIGPendingException.Pending) throw movelladot_pc_sdkPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
